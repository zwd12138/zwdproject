GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
asfksfjkaghjkl ghaklj klafj ljlkj

declare
v_dept scott.dept%rowtype;
cursor c_dept is select * from scott.dept;
begin 
  open c_dept;
  loop
    fetch c_dept into v_dept;
    if c_dept%notfound then exit; end if;
    dbms_output.put_line(v_dept.dname);
  end loop;
  close c_dept;
end;

declare  
type v_dept is table of scott.dept%rowtype
index by binary_integer;
cursor dept_cursor is select * from scott.dept;
v_dept_table v_dept;
begin
  open dept_cursor;
  fetch dept_cursor bulk collect into v_dept_table;
  close dept_cursor;
  for i in v_dept_table.first..v_dept_table.last loop
   dbms_output.put_line(v_dept_table(i).dname);
  end loop;
end;
declare
  cursor dept_cursor(dno number) is select * from scott.dept d where d.deptno = dno;
  v_dept scott.dept%rowtype;
begin
  open dept_cursor(20);
       loop
         fetch dept_cursor into v_dept;
         if dept_cursor%notfound then exit; end if;
         dbms_output.put_line(v_dept.dname);
       end loop;
  close dept_cursor;
end;


--触发器
create or replace trigger emp_trigger
before --after
insert or update or delete 
on scott.emp
begin
  if to_char(sysdate,'day') in ('星期一','星期二') then
    raise_application_error(-200003,'星期一放假');
    end if;
end;
drop trigger emp_trigger;
select * from scott.emp;
update scott.emp set sal = 9800 where scott.emp.empno=7499;
rollback;

create or replace procedure emp_sal_nums 
as
counts scott.emp.sal%type;
begin
  select sum(e.sal) into counts from scott.emp e;
   if  counts >20000 then
    raise_application_error(-20004,'error薪水超20000');
    end if;
end;
create or replace trigger emp_sal
after
insert on scott.emp
begin
  emp_sal_nums();
end;
insert into scott.emp values(7777,'GG','LOL',7839,sysdate,8000,800,20);
select * from scott.emp e where e.empno=7777;


drop trigger emp_sal;
create or replace trigger dept_trigger
before
insert or update or delete
on scott.dept
begin
  if to_char(sysdate,'day')in('星期一','星期二') then 
     case
       when inserting then
         raise_application_error(-20000,'插入错误');
       when updating then
         raise_application_error(-20000,'更新错误');
       when deleting then
         raise_application_error(-20000,'删除错误');
     end case;
  end if;
end;


create or replace trigger emp_sal_trigger
before
update of sal,comm
or delete
on scott.emp
for each row
  when (old.deptno=30)
begin
    case
      when updating('sal') then
        if :new.sal<:old.sal then
          raise_application_error(-20000,'30部门工资不能降低');
          end if;
    end case;
end;
update scott.emp set sal = 10 where deptno=30;

长风破浪会有时，直挂云帆济沧海！